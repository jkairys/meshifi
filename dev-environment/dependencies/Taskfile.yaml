version: '3'

vars:
  KIND_VERSION: v0.20.0
  CROSSPLANE_VERSION: v1.14.0
  KUBECTL_VERSION: v1.28.0

tasks:
  # Dependency Installation
  install:
    desc: "Install all required dependencies"
    cmds:
      - task: install-macos
      - task: install-linux
      - task: install-task
    summary: "Install Docker, Kind, kubectl, Helm, and Task"

  install-macos:
    desc: "Install dependencies on macOS"
    cmds:
      - |
        if [[ "$OSTYPE" == "darwin"* ]]; then
          echo "üì± Detected macOS"
          
          # Check if Homebrew is installed
          if ! command -v brew &> /dev/null; then
            echo "‚ùå Homebrew is not installed. Please install it first:"
            echo "   /bin/bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
            exit 1
          fi
          
          # Install required tools
          echo "üì¶ Installing required tools via Homebrew..."
          brew install kind kubectl helm docker crossplane
        else
          echo "‚ÑπÔ∏è  Skipping macOS installation (not on macOS)"
        fi

  install-linux:
    desc: "Install dependencies on Linux"
    cmds:
      - |
        if [[ "$OSTYPE" == "linux-gnu"* ]]; then
          echo "üêß Detected Linux"
          
          # Install kubectl
          if ! command -v kubectl &> /dev/null; then
            echo "üì¶ Installing kubectl..."
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi
          
          # Install Kind
          if ! command -v kind &> /dev/null; then
            echo "üì¶ Installing Kind..."
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/{{.KIND_VERSION}}/kind-linux-amd64
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin/kind
          fi
          
          # Install Helm
          if ! command -v helm &> /dev/null; then
            echo "üì¶ Installing Helm..."
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          fi
          
          # Install Crossplane CLI
          if ! command -v crossplane &> /dev/null; then
            echo "üì¶ Installing Crossplane CLI..."
            curl -sL https://raw.githubusercontent.com/crossplane/crossplane/release-1.14/install.sh | sh
            sudo mv kubectl-crossplane /usr/local/bin/crossplane
          fi
          
          # Check Docker
          if ! command -v docker &> /dev/null; then
            echo "‚ùå Docker is not installed. Please install Docker first:"
            echo "   https://docs.docker.com/engine/install/"
            exit 1
          fi
        else
          echo "‚ÑπÔ∏è  Skipping Linux installation (not on Linux)"
        fi

  install-task:
    desc: "Install Task if not already installed"
    cmds:
      - |
        if ! command -v task &> /dev/null; then
          echo "üì¶ Installing Task..."
          if [[ "$OSTYPE" == "darwin"* ]]; then
            brew install go-task/tap/go-task
          else
            sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
          fi
        else
          echo "‚úÖ Task is already installed"
        fi

  # Dependency Checking
  check:
    desc: "Check if required dependencies are installed"
    cmds:
      - task: check-kind
      - task: check-kubectl
      - task: check-docker
      - task: check-crossplane-cli
    summary: "Verify all required tools are available"

  check-kind:
    desc: "Check if Kind is installed"
    cmds:
      - |
        if ! command -v kind &> /dev/null; then
          echo "‚ùå Kind is not installed. Please install it first:"
          echo "   brew install kind"
          echo "   or visit: https://kind.sigs.k8s.io/docs/user/quick-start/#installation"
          exit 1
        else
          echo "‚úÖ Kind is installed: $(kind version)"
        fi

  check-kubectl:
    desc: "Check if kubectl is installed"
    cmds:
      - |
        if ! command -v kubectl &> /dev/null; then
          echo "‚ùå kubectl is not installed. Please install it first:"
          echo "   brew install kubectl"
          echo "   or visit: https://kubernetes.io/docs/tasks/tools/"
          exit 1
        else
          echo "‚úÖ kubectl is installed: $(kubectl version --client --short)"
        fi

  check-docker:
    desc: "Check if Docker is running"
    cmds:
      - |
        if ! docker info &> /dev/null; then
          echo "‚ùå Docker is not running. Please start Docker first."
          exit 1
        else
          echo "‚úÖ Docker is running"
        fi

  check-crossplane-cli:
    desc: "Check if Crossplane CLI is installed"
    cmds:
      - |
        if ! command -v crossplane &> /dev/null; then
          echo "‚ùå Crossplane CLI is not installed. Please install it first:"
          echo "   brew install crossplane"
          echo "   or visit: https://docs.crossplane.io/latest/cli/install/"
          exit 1
        else
          echo "‚úÖ Crossplane CLI is installed: $(crossplane version --short)"
        fi

  # Help
  help:
    desc: "Show available dependency tasks"
    cmds:
      - task --taskfile ./taskfiles/Taskfile.dependencies.yml --list
